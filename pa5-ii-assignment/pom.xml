<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.umn.cs.recsys</groupId>
  <artifactId>ii-assignment</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <lenskit.eval.scriptDir>${basedir}/src/eval/</lenskit.eval.scriptDir>
    <lenskit.eval.dataDir>${basedir}/data/</lenskit.eval.dataDir>
    <lenskit.eval.analysisDir>${basedir}/target/analysis/</lenskit.eval.analysisDir>

    <!-- The version of LensKit for your project -->
    <!-- Note that we use project.version to pick up the version from the 
         source tree this archetype is being built from. -->
    <lenskit.version>2.0.4</lenskit.version>
  </properties>

  <dependencies>

    <!-- You will automatically get a version of LensKit for your project,
         pulled in transitively by the lenskit-eval-maven-plugin. The version you
         get is based on the version of the archetype you used to create this project. -->

    <dependency>
      <groupId>org.grouplens.lenskit</groupId>
      <artifactId>lenskit-core</artifactId>
      <version>${lenskit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.grouplens.lenskit</groupId>
      <artifactId>lenskit-knn</artifactId>
      <version>${lenskit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.grouplens.lenskit</groupId>
      <artifactId>lenskit-eval</artifactId>
      <version>${lenskit.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.9</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Now we specify the build that will actually execute to make our project 
       do something cool. The build is a collection of plugins that we execute to 
       do the work. Note that we run the evaluations using the lenskit-lifecycle, 
       because we use the lenskit-eval-maven-plugin. The phases of this lifecycle 
       are lenskit-pre-eval, lenskit-eval, lenskit-post-eval, and lenskit-analyze, 
       in that order. -->

  <build>
    <plugins>
      <!-- LensKit requires at least Java 1.6 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- Run the lenskit eval plugin that does the work of evaluating the
           recommenders you are comparing, by running your Groovy script. -->
      <plugin>
        <artifactId>lenskit-eval-maven-plugin</artifactId>
        <groupId>org.grouplens.lenskit</groupId>
        <version>${lenskit.version}</version>
        <extensions>true</extensions>
        <configuration>
          <!-- Specify the evaluation script to run. -->
          <script>${lenskit.eval.scriptDir}/eval.groovy</script>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>make-scripts</id>
            <goals><goal>assemble</goal></goals>
            <phase>package</phase>
            <configuration>
              <repositoryLayout>flat</repositoryLayout>
              <programs>
                <program>
                  <name>run-ii</name>
                  <mainClass>edu.umn.cs.recsys.ii.IIMain</mainClass>
                </program>
              </programs>
              <assembleDirectory>${project.build.directory}</assembleDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>source-package</id>
            <goals><goal>run</goal></goals>
            <phase>package</phase>
            <configuration>
              <target>
                <zip destfile="${project.build.directory}/${project.artifactId}.zip">
                  <mappedresources>
                    <fileset dir="${basedir}">
                      <include name="pom.xml"/>
                      <include name="README.csv"/>
                      <include name="src/**/*.java"/>
                      <include name="src/**/*.groovy"/>
                      <include name="src/main/resources/*.xml"/>
                      <include name="data/*.csv"/>
                      <exclude name="data/movielens-*"/>
                    </fileset>
                    <globmapper from="*" to="${project.artifactId}/*"/>
                  </mappedresources>
                </zip>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
